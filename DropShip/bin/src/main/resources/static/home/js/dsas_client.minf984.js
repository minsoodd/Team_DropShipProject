const DSAC={bounce_cookie_key:"danawa-loggingApplicationClient-bounce",cookie_key:"danawa-loggingApplicationClient",debug_mode:false,api_mode:"local",api_info:{local:{client_hostname:["localhost","local","/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$/"],url:"localhost:5000",port:"",domain:"localhost"},dev:{client_hostname:["dsac-t","-t"],url:"dsas-t.danawa.com",port:"",domain:".danawa.com"},stage:{client_hostname:["dsac-s","-s"],url:"dsas-t.danawa.com",port:"",domain:".danawa.com"},production:{client_hostname:[],url:"dsas-s.danawa.com",port:"",domain:".danawa.com"},api_path:{bid:"/uxbid",send:"/uxlog",failure:"/uxlog"}},json_data:null,print_msg:function(e){if(this.debug_mode===true){console.log(e)}else{return 0}},get_cookie:function(){return document.cookie.match("(^|;) ?"+this.cookie_key+"=([^;]*)(;|$)")},get_bid:function(){var e=this.get_cookie();return e[2]},save_cookie:function(e){var o=new Date;o.setTime(o.getTime()+36500*24*60*60*1e3);var t=this.cookie_key+"="+encodeURIComponent(e)+"; path=/; expires="+o.toUTCString()+"; domain="+encodeURIComponent(this.api_info[this.api_mode]["domain"]);document.cookie=t;return t},generate_url:function(e,o){return location.protocol+"//"+this.api_info[e]["url"]+this.api_info[e]["port"]+this.api_info["api_path"][o]},send_http_request:function(t,n){var i=new XMLHttpRequest;i.open(t.method,t.url,true);if(t.contentType!=null)i.setRequestHeader("Content-Type",t.contentType);i.responseType=t.responseType;i.onload=function(){var e=i.response;if(typeof n==="function"&&e.data!==null){var o=e.data;n(t,o)}};i.onerror=function(){if(t.method==="POST"){navigator.sendBeacon(t.url,new Blob([t.data],{type:t.contentType}))}};if(t.method==="POST"){i.send(t.data)}else{i.send()}},execute:function(e,o){try{if(o===undefined){o=false}if(arguments.length>2){console.log("입력한 parameter 수가 일치 하지 않 습니다");return 0}if(typeof arguments[0]!="string"){console.log("입력한 첫번째 parameter 의 타입이 일치 하지 않 습니다");return 0}if(arguments[0].length===0){console.log("입력한 첫번째 parameter 가 입력 되지 않았 습니다");return 0}if(typeof o!="boolean"){console.log("입력한 두번째 parameter 의 타입이 일치 하지 않 습니다");return 0}this.debug_mode=o;this.json_data=e;this.api_mode=this.get_mode();this.send()}catch(e){console.log(e)}},get_mode:function(){var e=location.hostname;for(var o=0;o<this.api_info["local"]["client_hostname"].length;o++){if(e.search(this.api_info["local"]["client_hostname"][o])>-1){return"local"}}for(var o=0;o<this.api_info["dev"]["client_hostname"].length;o++){if(e.search(this.api_info["dev"]["client_hostname"][o])>-1){return"dev"}}for(var o=0;o<this.api_info["stage"]["client_hostname"].length;o++){if(e.search(this.api_info["stage"]["client_hostname"][o])>-1){return"stage"}}return"production"},send:function(){try{if(this.api_mode){var e=this.get_cookie();if(e){var o=e[2];this.send_uxlog(o)}else{this.send_uxlog_after_issue_bid()}}else{console.log("mode not found - send main fail")}}catch(e){if(this.debug_mode===true){console.log(e)}else{console.log(e.name,e.message)}}},send_uxlog_after_issue_bid:function(){if(this.api_mode){var e=this.generate_url(this.api_mode,"bid");var o=function(e,o){if(e.url.includes("uxbid")){if(arguments.length!==2||typeof o!=="string"||o.length!==36){console.log("고유 키 값에 오류가 있습니다")}else{this.save_cookie(o);this.send_uxlog(o)}}}.bind(this);var t={method:"GET",url:e,responseType:"json"};this.send_http_request(t,o)}},send_uxlog:function(e){if(this.api_mode){var o=this.generate_url(this.api_mode,"send");var t={"js-event":this.json_data,bid:e,referer:location.href,"pre-referer":document.referrer};var n={method:"POST",contentType:"application/x-www-form-urlencoded",url:o,data:new URLSearchParams(t).toString(),responseType:"json"};this.send_http_request(n)}else{this.print_msg("mode not found...")}}};