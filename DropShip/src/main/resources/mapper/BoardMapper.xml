<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.mapper.BoardMapper"> 

	<!-- 전체 게시글 불러들이기 -->
	<select id="selectBoardAll" resultType="com.java.vo.BoardVo"> <!-- id = 메소드명, resultType = 결과물을 받는형식 -->
	SELECT * FROM (
      SELECT rownum rnum, a.*
	      FROM (
		      SELECT n.id AS id, n.freeBoard_isTop, n.member_id AS member_id, a.member_login_Id, a.member_name,
				      n.freeBoard_title, n.freeBoard_content, n.freeBoard_date, n.freeBoard_update_date,
				      n.freeBoard_file_name, n.freeBoard_hit, n.freeBoard_head, n.freeBoard_ban, 
				      n.freeBoard_group, n.freeBoard_indent, n.freeBoard_step ,a.member_nName
		      			FROM freeboard n
		      JOIN member a ON n.member_id = a.id
		      ORDER BY n.freeBoard_isTop, n.freeBoard_group,n.freeBoard_step, n.freeBoard_indent , n.freeBoard_date DESC 
      	   ) a
     ) WHERE rnum BETWEEN #{startRow} AND #{endRow} 
	</select>
	
	<!-- 자유 게시판 검색하기 준비중 -->
	<select id="boardSelectSearch" resultType="com.java.vo.BoardVo">
		select * from freeboard where
		<if test="category == 'all'">
			 freeBoard_title like '%'||#{searchWord}||'%' or freeBoard_content like'%'||#{searchWord}||'%'
		</if>
		<if test="category != 'all'">
			${category} like '%'||#{searchWord}||'%' 
		</if>
	</select>
	
	<!-- 자유 게시판 1개 게시물 가져오기 -->
	<select id="selectOne" resultType="com.java.vo.BoardVo">
		select * from freeboard where id=#{id}
	</select>
	
	<!-- 자유 게시판 1개 게시물 가져오기 - 어드민 -->
	<select id="selectOneforAdmin" resultType="com.java.vo.BoardVo">
		select * from freeboard where id=#{id}
	</select>
	
	<!-- 자유 게시판 이전글 가져오기 -->
   <select id="preSelectOne" resultType="com.java.vo.BoardVo">
   		select * from freeboard 
		where id = 
		(select prev_id from
		(select id,freeBoard_title, lead(id,1,-1) over(ORDER BY id desc) as prev_id
		from freeboard) 
		where id = #{id})
   </select>
 
   <!-- 자유 게시판 다음글 가져오기 -->	 
   <select id="nextSelectOne" resultType="com.java.vo.BoardVo">
   		select * from freeboard 
		where id = 
		(select next_id from
		(select id,freeboard_title, lag(id,1,-1) over(ORDER BY id desc) as next_id
		from freeboard) 
		where id = #{id})
   </select>
    
    <!-- 자유 게시판 게시글 수 체크하기 -->
	<select id="selectCount" resultType="int"> 
		select count(*) count from freeboard
	</select>
	
	<!-- 자유 1개 가져올 때 마다 조회수 1 증가시키기 -->
	<update id="updateFreeBoard_hit">
		update freeboard set freeBoard_hit = freeBoard_hit + 1 where id = #{id}
	</update>
	
	<!-- 자유 게시판 작성하기 -->
	<insert id="insertBoard">  <!-- 게시글 작성 (답글 댓글 달려고 수정함) -->
		insert into freeboard values(freeboard_seq.nextval,#{freeBoard_head},0,0,0,
		#{member_id},#{admin_id},#{freeBoard_title},#{freeBoard_content},
		sysdate,sysdate,#{freeBoard_file_name},0,0,freeboard_seq.nextval,0,0)
	</insert>
	
	<!-- 자유 게시판 삭제하기 -->
  	<delete id="deleteBoard">
  		delete freeboard where id = #{id}
  	</delete>
	
	<!-- 자유 게시판 수정하기 -->
	<update id="updateBoard">
		update freeboard set freeBoard_title = #{freeBoard_title}, freeBoard_content = #{freeBoard_content}, freeBoard_update_date = sysdate,
		freeBoard_file_name = #{freeBoard_file_name}, freeBoard_head = #{freeBoard_head}, freeBoard_ban = #{freeBoard_ban} where id = #{id} 
  	</update>
  	
  	<!-- 자유 게시판 상태 수정하기 - 어드민 -->
	<update id="adminupdateBoard">
		update freeboard set freeBoard_ban = #{freeBoard_ban} where id = #{id} 
  	</update>
  
  	<!-- /////↓↓↓↓////   ↓↓↓   답글 댓글  ↓↓↓↓    /////↓↓↓↓//// -->
  	
  	
  	
  	<!-- 답글 달기 전 뒤에있는 글들 step + 1 해주기  -->
	<update id="setStepPlusOne">
		UPDATE freeboard SET freeBoard_step = freeBoard_step + 1 
		WHERE freeBoard_group = #{freeBoard_group} 
		AND freeBoard_step  <![CDATA[ > ]]> #{freeBoard_step}
  	</update>
  	
  	<!-- 답글 작성 -->
  	<insert id="insertReply">  
		INSERT INTO freeboard VALUES(freeboard_seq.nextval,#{freeBoard_head},
		0,0,0,#{member_id},#{admin_id},#{freeBoard_title},#{freeBoard_content},
		sysdate,sysdate,#{freeBoard_file_name},0,0,#{freeBoard_group}, 
		#{freeBoard_indent}+1, #{freeBoard_step}+1)
	</insert>
  	
  	<!-- 댓글 작성 -->
	<insert id="insertComment" parameterType="com.java.vo.CommentVo">
	    <selectKey resultType="int" keyProperty="id" order="BEFORE">
	        SELECT NVL(MAX(id), 0) + 1 FROM freeBoard_comment
	     </selectKey>
	    INSERT INTO freeBoard_comment (id, freeBoard_id, member_id, comment_pw, comment_content, comment_date)
	    VALUES (#{id}, #{freeBoard_id}, #{member_id}, #{comment_pw}, #{comment_content}, sysdate)
	</insert>
	
	<!-- 댓글 하나 가져오기(insert하고 난 후 바로 가져옴) -->
	<select id="selectCommentById" parameterType="int" resultType="com.java.vo.CommentVo">
	    SELECT * FROM freeBoard_comment fc
	    JOIN Member m ON m.id = fc.member_id
	    WHERE fc.id=#{id}
	</select>
  	
  	<!-- 댓글들 리스트 가져오기 -->
	<select id="selectCommentsByFreeBoardId" parameterType="int" resultType="com.java.vo.CommentVo">
	    SELECT * FROM freeBoard_comment fc 
	    JOIN Member m ON m.id = fc.member_id
	    WHERE freeBoard_id = #{freeBoard_id}
	    ORDER BY fc.id DESC
	</select>
	
	<!-- 댓글 페이징처리 시도중 -->
<!-- 	<select id="selectCommentsByFreeBoardId" parameterType="int" resultType="com.java.vo.CommentVo"> -->
<!-- 	    SELECT * FROM ( -->
<!-- 	        SELECT rownum rnum, a.* -->
<!-- 	        FROM ( -->
<!-- 	            SELECT fc.*, m.member_name -->
<!-- 	            FROM freeBoard_comment fc -->
<!-- 	            JOIN Member m ON m.id = fc.member_id -->
<!-- 	            WHERE freeBoard_id = #{freeBoard_id} -->
<!-- 	            ORDER BY fc.id DESC -->
<!-- 	        ) a -->
<!-- 	    ) WHERE rnum BETWEEN #{startRow} AND #{endRow} -->
<!-- 	</select> -->
	

	<!-- 댓글 수정 -->	
	<update id="updateComment">
        UPDATE freeBoard_comment
        SET comment_content = #{comment_content}, comment_date = sysdate
        WHERE id = #{comment_id}
    </update>

	<!-- 댓글 삭제  -->  	
  	<delete id="deleteComment">
  		delete freeBoard_comment where id = #{comment_id}
  	</delete>
  
</mapper>